{"version":3,"sources":["redux/utils.js","redux/selectors.js","redux/constants.js","redux/actions.js","redux/actionTypes.js","components/presentational/QueryBar.js","components/containers/QueryBarContainer.js","components/containers/LoadingContainer.js","components/presentational/Gallery.js","components/containers/GalleryContainer.js","redux/reducers/gifs.js","redux/reducers/forms.js","redux/reducers/window.js","redux/reducers/index.js","redux/store.js","components/presentational/Lightbox.js","components/containers/LightboxContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["appendURLParams","_url","params","url","URL","search","URLSearchParams","windowStateSelector","store","window","windowWidthSelector","createSelector","_ref","width","windowHeightSelector","_ref2","height","gifsStateSelector","gifs","gifsSelector","_ref3","gifsByIdSelector","R","acc","_ref4","id","rest","Object","objectWithoutProperties","objectSpread","defineProperty","selectedGifSelector","_ref5","gifsById","selectedId","offsetSelector","formsStateSelector","forms","querySelector","_ref6","query","isLoadingSelector","_ref7","isLoading","shouldUseQuerySelector","giphyRequestDefaults","api_key","gifsUrlSelector","offset","shouldUseQuery","GIPHY_BASE_URL","q","setIsLoading","type","payload","setSelectedGif","fetchGifs","debounce","dispatch","getState","fetch","then","response","json","data","catch","e","console","error","withStyles","theme","root","bar","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","onChange","children","react_default","a","createElement","className","AppBar_default","Toolbar_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","value","mapDispatchToProps","target","connect","state","presentational_QueryBar","Loading","CircularProgress_default","LoadingContainer_Loading","flexWrap","overflow","li","listStyle","padding","imageWrapper","cursor","image","top","transform","getNextPage","onClickImage","windowHeight","windowWidth","galleryEl","useRef","useEffect","lastSeenGalleryEl","handleScroll","_ref2$target","scrollTop","scrollHeight","clientHeight","current","addEventListener","removeEventListener","concat","ref","style","map","gif","key","onClick","src","images","fixed_height_small","alt","length","presentational_Gallery","initialState","innerHeight","innerWidth","combineReducers","arguments","undefined","action","createStore","rootReducer","applyMiddleware","thunkMiddleware","maxWidth","maxHeight","close","event","stopPropagation","original","presentational_Lightbox","bootstrap","handleResize","results","flexDirection","QueryBarContainer","GalleryContainer","LoadingContainer","LightboxContainer","Boolean","location","hostname","match","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iOAAaA,EAAkB,SAACC,EAAMC,GACpC,IAAMC,EAAM,IAAIC,IAAIH,GAEpB,OADAE,EAAIE,OAAS,IAAIC,gBAAgBJ,GAC1BC,GCMII,EAAsB,SAAAC,GAAK,OAAIA,EAAMC,QAErCC,EAAsBC,YACjCJ,EACA,SAAAK,GAAA,OAAAA,EAAGC,QAGQC,EAAuBH,YAClCJ,EACA,SAAAQ,GAAA,OAAAA,EAAGC,SAGQC,EAAoB,SAAAT,GAAK,OAAIA,EAAMU,MAEnCC,EAAeR,YAC1BM,EACA,SAAAG,GAAA,OAAAA,EAAGF,OAGQG,EAAmBV,YAC9BQ,EACAG,IAAS,SAACC,EAADC,GAAA,IAAQC,EAARD,EAAQC,GAAOC,EAAfC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,eAAAG,OAAAE,EAAA,EAAAF,CAAA,GAAgCJ,EAAhCI,OAAAG,EAAA,EAAAH,CAAA,GAAsCF,EAAtCE,OAAAE,EAAA,EAAAF,CAAA,CAA6CF,MAAOC,MAAW,KAG7DK,EAAsBpB,YACjCM,EACAI,EACA,SAAAW,EAAiBC,GAAjB,IAAGC,EAAHF,EAAGE,WAAH,OACiB,OAAfA,EAAsB,KAAOD,EAASC,KAG7BC,EAAiBxB,YAC5BQ,EACAG,KAGWc,EAAqB,SAAA5B,GAAK,OAAIA,EAAM6B,OAEpCC,EAAgB3B,YAC3ByB,EACA,SAAAG,GAAA,OAAAA,EAAGC,QAGQC,EAAoB9B,YAC/ByB,EACA,SAAAM,GAAA,OAAAA,EAAGC,YAGQC,EAAyBjC,YACpC2B,EACAhB,IACEA,IAAS,IACTA,MAIEuB,EAAuB,CAAEC,QCjEF,oCDmEhBC,EAAkBpC,YAC7BwB,EACAS,EACAN,EACA,SAACU,EAAQC,EAAgBT,GAAzB,OACES,EACIjD,ECtEwBkD,sCDsETvB,OAAAE,EAAA,EAAAF,CAAA,GACVkB,EADU,CAEbM,EAAGX,EACHQ,YAEFhD,ECzE0BkD,wCDyEXvB,OAAAE,EAAA,EAAAF,CAAA,GAA0BkB,EAA1B,CAAgDG,gDE9D1DI,EAAe,SAAAT,GAAS,MAAK,CACxCU,KCZ4B,iBDa5BC,QAASX,IAGEY,EAAiB,SAAA9B,GAAE,MAAK,CACnC4B,KCpB8B,mBDqB9BC,QAAS7B,IAeE+B,EAAYC,IAZN,SAACC,EAAUC,GAC5B,IAAMxD,EAAM4C,EAAgBY,KAC5B,OAAOC,IAAMzD,GACV0D,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAjD,GAAA,IAAGoD,EAAHpD,EAAGoD,KAAH,OAAcN,EAnBQ,CAC9BL,KCZsB,WDatBC,QAiBuCU,MACpCH,KAAK,kBAAMH,EAASN,GAAa,MACjCa,MAAM,SAAAC,GACLC,QAAQC,MAAMF,GACdR,EAASN,GAAa,OAIkB,0GEwE/BiB,uBAnGA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJ1D,MAAO,QAET2D,IAAK,CACHxD,OHT4B,IGW9ByD,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAa,GACbC,YAAa,IAEfC,MAAMnD,OAAAG,EAAA,EAAAH,CAAA,CACJoD,QAAS,QACRT,EAAMU,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGb1E,OAAOsB,OAAAG,EAAA,EAAAH,CAAA,CACLuD,SAAU,WACVC,aAAcb,EAAMc,MAAMD,aAC1BE,gBAAiBC,eAAKhB,EAAMiB,QAAQC,OAAOC,MAAO,KAClDC,UAAW,CACTL,gBAAiBC,eAAKhB,EAAMiB,QAAQC,OAAOC,MAAO,MAEpDb,WAAY,EACZ/D,MAAO,QACNyD,EAAMU,YAAYC,GAAG,MAAQ,CAC5BL,WAAYN,EAAMqB,QAAQC,KAC1B/E,MAAO,SAGXgF,WAAY,CACVhF,MAA4B,EAArByD,EAAMqB,QAAQC,KACrB5E,OAAQ,OACRkE,SAAU,WACVY,cAAe,OACff,QAAS,OACTgB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,UACPrF,MAAO,QAETsF,WAAWxE,OAAAG,EAAA,EAAAH,CAAA,CACTyE,WAAY9B,EAAMqB,QAAQC,KAC1BS,aAAc/B,EAAMqB,QAAQC,KAC5BU,cAAehC,EAAMqB,QAAQC,KAC7BW,YAAkC,GAArBjC,EAAMqB,QAAQC,KAC3BY,WAAYlC,EAAMmC,YAAYC,OAAO,SACrC7F,MAAO,QACNyD,EAAMU,YAAYC,GAAG,MAAQ,CAC5BpE,MAAO,IACP8F,UAAW,CACT9F,MAAO,SA0CAwD,CApCE,SAAAuC,GAAS,IAChBC,EAAuCD,EAAvCC,QAASrE,EAA8BoE,EAA9BpE,MAAOsE,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAClC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQtC,MACtByC,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQE,UAAWN,EAAQrC,IAAKU,SAAS,UACvC8B,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEE,UAAWN,EAAQ/B,MACnByC,QAAQ,KACRrB,MAAM,UACNsB,QAAM,GAJR,gBAQAR,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQpC,OACxBuC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQxG,QACtB2G,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQhB,YACtBmB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,OAEFD,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEU,YAAY,eACZd,QAAS,CACPtC,KAAMsC,EAAQZ,UACd2B,MAAOf,EAAQV,YAEjBW,SAAUA,EACVe,MAAOrF,OAKduE,KC/FDe,EAAqB,CACzBhB,SH6BsB,SAAA/F,GAAA,IAAoBuC,EAApBvC,EAAGgH,OAAUF,MAAb,OAAoC,SAAAnE,GAO1D,OANAA,EAAS,CACPL,KCtCqB,YDuCrBC,YAEFI,EAAS,CAAEL,KC5Ca,eD6CxBK,EAASN,GAAa,IACfM,EAASF,MGjCHwE,cARS,SAAAC,GAAK,MAAK,CAChCzF,MAAOF,EAAc2F,KASrBH,EAFaE,CAGb,SAAApB,GAAK,OAAII,EAAAC,EAAAC,cAACgB,EAAatB,yBCZnBuB,GAAU,SAAAvH,GAAmB,IAAhB+B,EAAgB/B,EAAhB+B,UACjB,OAAOqE,EAAAC,EAAAC,cAAA,WAAMvE,EAAYqE,EAAAC,EAAAC,cAACkB,GAAAnB,EAAD,MAAuB,OAOnCe,eAJS,SAAAC,GAAK,MAAK,CAChCtF,UAAWF,EAAkBwF,KAGhBD,CAAyB,SAAApB,GAAK,OAAII,EAAAC,EAAAC,cAACmB,GAAYzB,KCuE/CvC,wBAhFA,CACbE,KAAM,CACJQ,QAAS,OACTuD,SAAU,OACVC,SAAU,SACVvC,eAAgB,UAElBwC,GAAI,CACF3H,MAAO,MACPG,OAAQ,IACRyH,UAAW,OACXC,QAAS,MAEXC,aAAc,CACZJ,SAAU,SACVK,OAAQ,UACR5H,OAAQ,OACR+D,QAAS,QACTG,SAAU,YAEZ2D,MAAO,CACLC,IAAK,MACL5D,SAAU,WACV6D,UAAW,mBACXlI,MAAO,SAwDIwD,CApDC,SAAAzD,GAOV,IANJiG,EAMIjG,EANJiG,QACA3F,EAKIN,EALJM,KACA8H,EAIIpI,EAJJoI,YACAC,EAGIrI,EAHJqI,aACAC,EAEItI,EAFJsI,aACAC,EACIvI,EADJuI,YAEMC,EAAYC,iBAAO,MAgBzB,OAfAC,oBAAU,WACR,IAOIC,EAPEC,EAAe,SAAAzI,GAEf,IAAA0I,EAAA1I,EADJgH,OAAU2B,EACND,EADMC,UAAWC,EACjBF,EADiBE,aAEjBD,EADAD,EAD+BG,cAEHD,GAC9BX,KAQJ,OAJII,EAAUS,UACZN,EAAoBH,EAAUS,SACZC,iBAAiB,SAAUN,GAExC,kBAAMD,EAAkBQ,oBAAoB,SAAUP,MAG7DxC,EAAAC,EAAAC,cAAA,OACEC,UAAS,WAAA6C,OAAanD,EAAQtC,MAC9B0F,IAAKb,EACLc,MAAO,CACLrJ,MAAOsI,EACPnI,OAAQkI,ENvDgB,KM0DzBhI,EAAKiJ,IAAI,SAAAC,GAAG,OACXpD,EAAAC,EAAAC,cAAA,MAAIC,UAAWN,EAAQ2B,GAAI6B,IAAKD,EAAI3I,IAClCuF,EAAAC,EAAAC,cAAA,OACEC,UAAWN,EAAQ8B,aACnB2B,QAAS,kBAAMrB,EAAamB,EAAI3I,MAEhCuF,EAAAC,EAAAC,cAAA,OACEC,UAAWN,EAAQgC,MACnB0B,IAAKH,EAAII,OAAOC,mBAAmBtK,IACnC+J,MAAO,GACPQ,IAAKN,EAAItF,eCnDRkD,eAdS,SAAAC,GAAK,MAAK,CAChC/G,KAAMC,EAAa8G,GACnBiB,aAAcpI,EAAqBmH,GACnCkB,YAAazI,EAAoBuH,KAGR,SAAAvE,GAAQ,MAAK,CACtCsF,YAAa,WACXtF,EAASN,GAAa,IACtBM,EAASF,IAEXyF,aAAc,SAAAxH,GAAE,OAAIiC,EAASH,EAAe9B,OAG/BuG,CAGb,SAAApB,GAAK,OAAKA,EAAM1F,KAAKyJ,OAAS,EAAI3D,EAAAC,EAAAC,cAAC0D,GAAYhE,GAAY,gBCzBvDiE,GAAe,CACnB3J,KAAM,GACNgB,WAAY,MCFR2I,GAAe,CACnBrI,MAAO,GACPG,WAAW,GCFPkI,GAAe,CACnB7J,OAAQP,OAAOqK,YACfjK,MAAOJ,OAAOsK,YCCDC,gBAAgB,CAAE3I,MFElB,WAAuC,IAA9B4F,EAA8BgD,UAAAN,OAAA,QAAAO,IAAAD,UAAA,GAAAA,UAAA,GAAtBJ,GAAcM,EAAQF,UAAAN,OAAA,EAAAM,UAAA,QAAAC,EACpD,OAAQC,EAAO9H,MACb,IPLqB,YOMnB,OAAO1B,OAAAE,EAAA,EAAAF,CAAA,GACFsG,EADL,CAEEzF,MAAO2I,EAAO7H,UAGlB,IPV0B,iBOWxB,OAAO3B,OAAAE,EAAA,EAAAF,CAAA,GACFsG,EADL,CAEEtF,UAAWwI,EAAO7H,UAGtB,QACE,OAAO2E,IEjB2B/G,KHEzB,WAAuC,IAA9B+G,EAA8BgD,UAAAN,OAAA,QAAAO,IAAAD,UAAA,GAAAA,UAAA,GAAtBJ,GAAcM,EAAQF,UAAAN,OAAA,EAAAM,UAAA,QAAAC,EACpD,OAAQC,EAAO9H,MACb,INToB,WMUlB,OAAO1B,OAAAE,EAAA,EAAAF,CAAA,GACFsG,EADL,CAEE/G,KAAM+G,EAAM/G,KAAK8I,OAAOmB,EAAO7H,WAGnC,INdsB,aMepB,OAAO3B,OAAAE,EAAA,EAAAF,CAAA,GACFsG,EADL,CAEE/G,KAAM,KAGV,INnB4B,mBMoB1B,OAAOS,OAAAE,EAAA,EAAAF,CAAA,GACFsG,EADL,CAEE/F,WAAYiJ,EAAO7H,UAGvB,QACE,OAAO2E,IGvBiCxH,ODE/B,WAAuC,IAA9BwH,EAA8BgD,UAAAN,OAAA,QAAAO,IAAAD,UAAA,GAAAA,UAAA,GAAtBJ,GAAcM,EAAQF,UAAAN,OAAA,EAAAM,UAAA,QAAAC,EACpD,OAAQC,EAAO9H,MACb,IRF2B,kBQGzB,OAAO8H,EAAO7H,QAEhB,QACE,OAAO2E,eETEmD,gBAAYC,GAAaC,aAAgBC,OCmCzClH,wBApCA,CACbE,KAAM,CACJW,SAAU,WACVG,gBAAiB,mBACjBU,WAAY,SACZC,eAAgB,SAChBjB,QAAS,OACT/D,OAAQ,OACRH,MAAO,OACPiI,IAAK,GAEPD,MAAO,CACL9D,QAAS,QACTyG,SAAU,MACVC,UAAW,MACX5K,MAAO,OACPG,OAAQ,SAoBGqD,CAhBE,SAAAzD,GAA6B,IAA1BiG,EAA0BjG,EAA1BiG,QAASuD,EAAiBxJ,EAAjBwJ,IAAKsB,EAAY9K,EAAZ8K,MAChC,OAAKtB,EAEHpD,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQtC,KAAM+F,QAASoB,GACrC1E,EAAAC,EAAAC,cAAA,OACEwD,IAAKN,EAAItF,MACTqC,UAAWN,EAAQgC,MACnByB,QAAS,SAAAqB,GAAK,OAAIA,EAAMC,mBACxBrB,IAAKH,EAAII,OAAOqB,SAAS1L,IACzBU,MAAOuJ,EAAII,OAAOqB,SAAShL,MAC3BG,OAAQoJ,EAAII,OAAOqB,SAAS7K,UATjB,OCVJgH,eARS,SAAAC,GAAK,MAAK,CAChCmC,IAAKrI,EAAoBkG,KAGA,SAAAvE,GAAQ,MAAK,CACtCgI,MAAO,kBAAMhI,EAASH,EAAe,UAGxByE,CAGb,SAAApB,GAAK,OAAII,EAAAC,EAAAC,cAAC4E,GAAalF,KCNnBmF,GAAY,WAChB,IAAMC,EAAevI,IACnB,kBACEjD,GAAMkD,SAAS,CACbL,KbRuB,kBaSvBC,QAAS,CAAEtC,OAAQP,OAAOqK,YAAajK,MAAOJ,OAAOsK,eAEzD,KAIF,OAFAvK,GAAMkD,SAASF,GACf/C,OAAOqJ,iBAAiB,SAAUkC,GAC3B,kBAAMvL,OAAOsJ,oBAAoB,SAAUiC,KA0BrC3H,wBAvBA,CACb4H,QAAS,CACPlH,QAAS,OACTmH,cAAe,SACfnG,WAAY,WAmBD1B,CAfH,SAAAzD,GAAiB,IAAdiG,EAAcjG,EAAdiG,QAEb,OADAyC,oBAAUyC,GAAW,IAEnB/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiF,EAAD,KACEnF,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQoF,SACtBjF,EAAAC,EAAAC,cAACkF,GAAD,MACApF,EAAAC,EAAAC,cAACmF,GAAD,QAGJrF,EAAAC,EAAAC,cAACoF,GAAD,SC/BcC,QACW,cAA7B9L,OAAO+L,SAASC,UAEe,UAA7BhM,OAAO+L,SAASC,UAEhBhM,OAAO+L,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAUrM,MAAOA,IACfwG,EAAAC,EAAAC,cAAC4F,GAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtJ,KAAK,SAAAuJ,GACjCA,EAAaC","file":"static/js/main.d2d1badd.chunk.js","sourcesContent":["export const appendURLParams = (_url, params) => {\n  const url = new URL(_url);\n  url.search = new URLSearchParams(params);\n  return url;\n};\n","import { createSelector } from \"reselect\";\nimport * as R from \"ramda\";\nimport { appendURLParams } from \"./utils\";\nimport {\n  GIPHY_SEARCH_URL,\n  GIPHY_TRENDING_URL,\n  GIPHY_API_KEY\n} from \"./constants\";\n\nexport const windowStateSelector = store => store.window;\n\nexport const windowWidthSelector = createSelector(\n  windowStateSelector,\n  ({ width }) => width\n);\n\nexport const windowHeightSelector = createSelector(\n  windowStateSelector,\n  ({ height }) => height\n);\n\nexport const gifsStateSelector = store => store.gifs;\n\nexport const gifsSelector = createSelector(\n  gifsStateSelector,\n  ({ gifs }) => gifs\n);\n\nexport const gifsByIdSelector = createSelector(\n  gifsSelector,\n  R.reduce((acc, { id, ...rest }) => ({ ...acc, [id]: { id, ...rest } }), {})\n);\n\nexport const selectedGifSelector = createSelector(\n  gifsStateSelector,\n  gifsByIdSelector,\n  ({ selectedId }, gifsById) =>\n    selectedId === null ? null : gifsById[selectedId]\n);\n\nexport const offsetSelector = createSelector(\n  gifsSelector,\n  R.length\n);\n\nexport const formsStateSelector = store => store.forms;\n\nexport const querySelector = createSelector(\n  formsStateSelector,\n  ({ query }) => query\n);\n\nexport const isLoadingSelector = createSelector(\n  formsStateSelector,\n  ({ isLoading }) => isLoading\n);\n\nexport const shouldUseQuerySelector = createSelector(\n  querySelector,\n  R.pipe(\n    R.equals(\"\"),\n    R.not\n  )\n);\n\nconst giphyRequestDefaults = { api_key: GIPHY_API_KEY };\n\nexport const gifsUrlSelector = createSelector(\n  offsetSelector,\n  shouldUseQuerySelector,\n  querySelector,\n  (offset, shouldUseQuery, query) =>\n    shouldUseQuery\n      ? appendURLParams(GIPHY_SEARCH_URL, {\n          ...giphyRequestDefaults,\n          q: query,\n          offset\n        })\n      : appendURLParams(GIPHY_TRENDING_URL, { ...giphyRequestDefaults, offset })\n);\n","export const GIPHY_API_KEY = \"QGD7tgrph7TOmMoTcoxuQVgzxLiYuERS\";\nexport const GIPHY_BASE_URL = \"http://api.giphy.com\";\nexport const GIPHY_SEARCH_PATH = \"/v1/gifs/search\";\nexport const GIPHY_SEARCH_URL = GIPHY_BASE_URL + GIPHY_SEARCH_PATH;\nexport const GIPHY_TRENDING_PATH = \"/v1/gifs/trending\";\nexport const GIPHY_TRENDING_URL = GIPHY_BASE_URL + GIPHY_TRENDING_PATH;\n\nexport const QUERY_BAR_HEIGHT = 64;\n","import {\n  SET_QUERY,\n  ADD_GIFS,\n  SET_IS_LOADING,\n  CLEAR_GIFS,\n  SET_SELECTED_GIF\n} from \"./actionTypes\";\nimport fetch from \"cross-fetch\";\nimport { gifsUrlSelector } from \"./selectors\";\nimport debounce from \"lodash.debounce\";\n\nexport const addGifs = gifs => ({\n  type: ADD_GIFS,\n  payload: gifs\n});\n\nexport const setIsLoading = isLoading => ({\n  type: SET_IS_LOADING,\n  payload: isLoading\n});\n\nexport const setSelectedGif = id => ({\n  type: SET_SELECTED_GIF,\n  payload: id\n});\n\nconst _fetchGifs = (dispatch, getState) => {\n  const url = gifsUrlSelector(getState());\n  return fetch(url)\n    .then(response => response.json())\n    .then(({ data }) => dispatch(addGifs(data)))\n    .then(() => dispatch(setIsLoading(false)))\n    .catch(e => {\n      console.error(e);\n      dispatch(setIsLoading(false));\n    });\n};\n\nexport const fetchGifs = debounce(_fetchGifs, 400);\n\nexport const setQuery = ({ target: { value: payload } }) => dispatch => {\n  dispatch({\n    type: SET_QUERY,\n    payload\n  });\n  dispatch({ type: CLEAR_GIFS });\n  dispatch(setIsLoading(true));\n  return dispatch(fetchGifs);\n};\n","export const ADD_GIFS = \"ADD_GIFS\";\nexport const CLEAR_GIFS = \"CLEAR_GIFS\";\nexport const SET_SELECTED_GIF = \"SET_SELECTED_GIF\";\n\nexport const SET_QUERY = \"SET_QUERY\";\nexport const SET_IS_LOADING = \"SET_IS_LOADING\";\n\nexport const SET_WINDOW_DIMS = \"SET_WINDOW_DIMS\";\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport { QUERY_BAR_HEIGHT } from \"../../redux/constants\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  bar: {\n    height: QUERY_BAR_HEIGHT\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nconst QueryBar = props => {\n  const { classes, query, onChange, children } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.bar} position=\"static\">\n        <Toolbar>\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n          >\n            Giphy Search\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              onChange={onChange}\n              value={query}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      {children}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(QueryBar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { querySelector } from \"../../redux/selectors\";\nimport { setQuery } from \"../../redux/actions\";\nimport QueryBar from \"../presentational/QueryBar\";\n\nconst mapStateToProps = state => ({\n  query: querySelector(state)\n});\n\nconst mapDispatchToProps = {\n  onChange: setQuery\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(props => <QueryBar {...props} />);\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { connect } from \"react-redux\";\nimport { isLoadingSelector } from \"../../redux/selectors\";\n\nconst Loading = ({ isLoading }) => {\n  return <div>{isLoading ? <CircularProgress /> : null}</div>;\n};\n\nconst mapStateToProps = state => ({\n  isLoading: isLoadingSelector(state)\n});\n\nexport default connect(mapStateToProps)(props => <Loading {...props} />);\n","import React, { useRef, useEffect } from \"react\";\nimport { QUERY_BAR_HEIGHT } from \"../../redux/constants\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    overflow: \"scroll\",\n    justifyContent: \"center\"\n  },\n  li: {\n    width: \"31%\",\n    height: 164,\n    listStyle: \"none\",\n    padding: \"1%\"\n  },\n  imageWrapper: {\n    overflow: \"hidden\",\n    cursor: \"pointer\",\n    height: \"100%\",\n    display: \"block\",\n    position: \"relative\"\n  },\n  image: {\n    top: \"50%\",\n    position: \"relative\",\n    transform: \"translateY(-50%)\",\n    width: \"100%\"\n  }\n};\n\nconst Gallery = ({\n  classes,\n  gifs,\n  getNextPage,\n  onClickImage,\n  windowHeight,\n  windowWidth\n}) => {\n  const galleryEl = useRef(null);\n  useEffect(() => {\n    const handleScroll = ({\n      target: { scrollTop, scrollHeight, clientHeight }\n    }) => {\n      if (scrollTop + clientHeight >= scrollHeight) {\n        getNextPage();\n      }\n    };\n    let lastSeenGalleryEl;\n    if (galleryEl.current) {\n      lastSeenGalleryEl = galleryEl.current;\n      lastSeenGalleryEl.addEventListener(\"scroll\", handleScroll);\n    }\n    return () => lastSeenGalleryEl.removeEventListener(\"scroll\", handleScroll);\n  });\n  return (\n    <div\n      className={`Gallery ${classes.root}`}\n      ref={galleryEl}\n      style={{\n        width: windowWidth,\n        height: windowHeight - QUERY_BAR_HEIGHT\n      }}\n    >\n      {gifs.map(gif => (\n        <li className={classes.li} key={gif.id}>\n          <div\n            className={classes.imageWrapper}\n            onClick={() => onClickImage(gif.id)}\n          >\n            <img\n              className={classes.image}\n              src={gif.images.fixed_height_small.url}\n              style={{}}\n              alt={gif.title}\n            />\n          </div>\n        </li>\n      ))}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Gallery);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  gifsSelector,\n  windowWidthSelector,\n  windowHeightSelector\n} from \"../../redux/selectors\";\nimport { fetchGifs, setIsLoading, setSelectedGif } from \"../../redux/actions\";\nimport Gallery from \"../presentational/Gallery\";\n\nconst mapStateToProps = state => ({\n  gifs: gifsSelector(state),\n  windowHeight: windowHeightSelector(state),\n  windowWidth: windowWidthSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getNextPage: () => {\n    dispatch(setIsLoading(true));\n    dispatch(fetchGifs);\n  },\n  onClickImage: id => dispatch(setSelectedGif(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(props => (props.gifs.length > 0 ? <Gallery {...props} /> : null));\n","import { ADD_GIFS, CLEAR_GIFS, SET_SELECTED_GIF } from \"../actionTypes\";\n\nconst initialState = {\n  gifs: [],\n  selectedId: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_GIFS: {\n      return {\n        ...state,\n        gifs: state.gifs.concat(action.payload)\n      };\n    }\n    case CLEAR_GIFS: {\n      return {\n        ...state,\n        gifs: []\n      };\n    }\n    case SET_SELECTED_GIF: {\n      return {\n        ...state,\n        selectedId: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_IS_LOADING, SET_QUERY } from \"../actionTypes\";\n\nconst initialState = {\n  query: \"\",\n  isLoading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_QUERY: {\n      return {\n        ...state,\n        query: action.payload\n      };\n    }\n    case SET_IS_LOADING: {\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_WINDOW_DIMS } from \"../actionTypes\";\n\nconst initialState = {\n  height: window.innerHeight,\n  width: window.innerWidth\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WINDOW_DIMS: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport gifs from \"./gifs\";\nimport forms from \"./forms\";\nimport window from \"./window\";\n\nexport default combineReducers({ forms, gifs, window });\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  root: {\n    position: \"absolute\",\n    backgroundColor: \"rgba(0,0,0, 0.7)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    top: 0\n  },\n  image: {\n    display: \"block\",\n    maxWidth: \"80%\",\n    maxHeight: \"90%\",\n    width: \"auto\",\n    height: \"auto\"\n  }\n};\n\nconst Lightbox = ({ classes, gif, close }) => {\n  if (!gif) return null;\n  return (\n    <div className={classes.root} onClick={close}>\n      <img\n        alt={gif.title}\n        className={classes.image}\n        onClick={event => event.stopPropagation()}\n        src={gif.images.original.url}\n        width={gif.images.original.width}\n        height={gif.images.original.height}\n      />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Lightbox);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectedGifSelector } from \"../../redux/selectors\";\nimport Lightbox from \"../presentational/Lightbox\";\nimport { setSelectedGif } from \"../../redux/actions\";\n\nconst mapStateToProps = state => ({\n  gif: selectedGifSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  close: () => dispatch(setSelectedGif(null))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(props => <Lightbox {...props} />);\n","import React, { useEffect } from \"react\";\nimport QueryBarContainer from \"./containers/QueryBarContainer\";\nimport LoadingContainer from \"./containers/LoadingContainer\";\nimport GalleryContainer from \"./containers/GalleryContainer\";\nimport { SET_WINDOW_DIMS } from \"../redux/actionTypes\";\nimport debounce from \"lodash.debounce\";\nimport store from \"../redux/store\";\nimport { fetchGifs } from \"../redux/actions\";\nimport LightboxContainer from \"./containers/LightboxContainer\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst bootstrap = () => {\n  const handleResize = debounce(\n    () =>\n      store.dispatch({\n        type: SET_WINDOW_DIMS,\n        payload: { height: window.innerHeight, width: window.innerWidth }\n      }),\n    100\n  );\n  store.dispatch(fetchGifs);\n  window.addEventListener(\"resize\", handleResize);\n  return () => window.removeEventListener(\"resize\", handleResize);\n};\n\nconst styles = {\n  results: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n};\n\nconst App = ({ classes }) => {\n  useEffect(bootstrap, []);\n  return (\n    <div>\n      <QueryBarContainer>\n        <div className={classes.results}>\n          <GalleryContainer />\n          <LoadingContainer />\n        </div>\n      </QueryBarContainer>\n      <LightboxContainer />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}